{"version":3,"sources":["components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpensesFilter","props","react_default","a","createElement","className","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","components_UI_Card","components_Expenses_ExpenseDate","title","amount","ExpensesList","items","length","map","expense","components_Expenses_ExpenseItem","key","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","apply","Object","toConsumableArray","components_Chart_ChartBar","ExpensesChart","_step","chartDataPoints","_iterator","_createForOfIteratorHelper","expenses","s","n","done","getMonth","err","e","f","components_Chart_Chart","Expenses","_useState","useState","_useState2","slicedToArray","filteredYear","setFilteredYear","filteredExpenses","filter","toString","components_Expenses_ExpensesFilter","selectedYear","Expenses_ExpensesChart","components_Expenses_ExpensesList","ExpenseForm","enteredTitle","setEnteredTitle","_useState3","_useState4","enteredAmount","setEnteredAmount","_useState5","_useState6","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","NewExpense","components_NewExpense_ExpenseForm","enteredExpenseData","objectSpread","random","onAddExpense","App","DUMMY_EXPENSES","setExpenses","components_NewExpense_NewExpense","prevExpenses","concat","components_Expenses_Expenses","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.4e155274.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './ExpensesFilter.css';\r\nconst ExpensesFilter = (props) => {\r\n  // when a new value is selected from the dropdown menu the dropdownChangeHandler is called and the onChangeFilter function from props is used to pass the selected value as parameter to the parent component\r\n    const dropdownChangeHandler=(event)=>{\r\n        props.onChangeFilter(event.target.value);\r\n    };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter By Year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2023\">2023</option>\r\n          <option value=\"2024\">2024</option>\r\n          <option value=\"2025\">2025</option>\r\n          <option value=\"2026\">2026</option>\r\n          <option value=\"2027\">2027</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport \"./ExpenseDate.css\";\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\nimport \"./Card.css\";\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nconst ExpenseItem = (props) => {\r\n  // State updates are scheduled by react , they are not dont instantly\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date}></ExpenseDate>\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">₹{props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\nconst ExpensesList = (props) => {\r\n\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => ( \r\n        <ExpenseItem\r\n          // A “key” is a special string attribute you need to include when creating lists of elements in React. Keys are used to React to identify which items in the list are changed, updated, or deleted. In other words, we can say that keys are used to give an identity to the elements in the lists.\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport './ChartBar.css';\r\n\r\nconst ChartBar=(props)=>{\r\n    let barFillHeight='0%';\r\n    if(props.maxValue>0){\r\n        barFillHeight=Math.round((props.value/props.maxValue)*100)+'%' ;\r\n    }\r\n\r\n    return(\r\n        <div className=\"chart-bar\">\r\n        {/* style wants an object to apply styling. The outer curly braces is for outputting something dynamically and inner curly braces is because we are using a JS object  */}\r\n            <div className=\"chart-bar__inner\">\r\n                <div className=\"chart-bar__fill\" style={{height:barFillHeight}}></div>\r\n            </div>\r\n            <div className=\"chart-bar__label\">\r\n                {props.label}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\nconst Chart = (props) => {\r\n\r\n    //map will return an array of value(number) to dataPointValues \r\n    const dataPointValues=props.dataPoints.map((dataPoint)=>dataPoint.value)\r\n\r\n    //spread operator pull out all the array elements and add them as standalone arguments to this max method\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n  return (\r\n    <div className=\"chart\">\r\n\r\n    {/* when chart is used by some component it sends datapoints as props that would be an array having value and should be plotted using ChartBar */}\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label} \r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\nconst ExpensesChart=(props)=>{\r\n    const chartDataPoints=[\r\n        {label:'Jan', value:0},\r\n        {label:'Feb', value:0},\r\n        {label:'Mar', value:0},\r\n        {label:'Apr', value:0},\r\n        {label:'May', value:0},\r\n        {label:'Jun', value:0},\r\n        {label:'Jul', value:0},\r\n        {label:'Aug', value:0},\r\n        {label:'Sep', value:0},\r\n        {label:'Oct', value:0},\r\n        {label:'Nov', value:0},\r\n        {label:'Dec', value:0},\r\n    ];\r\n    //iterating through expenses and adding the value for each month\r\n    for(const expense of props.expenses){\r\n        const expenseMonth=expense.date.getMonth();//starting at 0 => Jan\r\n        chartDataPoints[expenseMonth].value+=expense.amount;\r\n    }\r\n    return <Chart dataPoints={chartDataPoints}/>\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\n\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2022\");\r\n\r\n  // initially 2022 is set as filteredYear\r\n  // selectedYear is collected from the ExpenseFilter component and new value selectedYear is set using setFilteredYear\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n\r\n// filtering the items based on the filtered year\r\n  const filteredExpenses=props.items.filter(expense=>{\r\n    return expense.date.getFullYear().toString()===filteredYear;\r\n  });\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filterChangeHandler}\r\n      />\r\n      <ExpensesChart expenses={filteredExpenses}/>\r\n      <ExpensesList items={filteredExpenses}/>\r\n       \r\n    </Card>\r\n  );\r\n};\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\nconst ExpenseForm = (props) => {\r\n  // We can have more than one state in a component for separate\r\n  // state changes .\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    //This is a JS function to avoid page reloading and sending request to server to collect data. Here we want to collect data maunually from the form.\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    // resetting the input data via two-way binding\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n    \r\n  };\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            value={enteredAmount}\r\n            min=\"1\"\r\n            step=\"1\"\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            value={enteredDate}\r\n            min=\"2022-01-01\"\r\n            max=\"2027-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n          <button type=\"submin\">Add Expense</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default ExpenseForm;\r\n","import React from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\nconst NewExpense = (props) => {\r\n  // saveExpenseDataHandler is used to collect data into enteredExpenseData parameter from the ExpenseForm.\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      // spread operator , spreads the key value pair in the parameter data recieved\r\n\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n\r\n    // sending the expense to parent App.js through parameter using the function defined in App.js and calling the function here\r\n\r\n    props.onAddExpense(expenseData);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} />\r\n    </div>\r\n  );\r\n};\r\nexport default NewExpense;\r\n","import React,{useState} from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nconst App = () => {\n  const DUMMY_EXPENSES = [\n    {\n      id: \"e1\",\n      title: \"Toilet Paper\",\n      amount: 150,\n      date: new Date(2022, 1, 14),\n    },\n    {\n      id: \"e2\",\n      title: \"New TV\",\n      amount: 1500,\n      date: new Date(2022, 2, 17),\n    },\n    {\n      id: \"e3\",\n      title: \"Car Insurance\",\n      amount: 750,\n      date: new Date(2022, 7, 28),\n    },\n    {\n      id: \"e4\",\n      title: \"New Desk (Wooden)\",\n      amount: 387,\n      date: new Date(2022, 8, 12),\n    },\n  ];\n\n  // function to be passed as props to the NewExpense to collect it's data as parameter and use it here\n  const [expenses,setExpenses]=useState(DUMMY_EXPENSES);\n  const addExpenseHandler = (expense) => {\n    // SPECIAL FUNCTION FORM for state updating function is used so that previous data is not lost. Here we are passing a function as an argument to the state updating function(setExpenses). React will automatically send a previous snapshot of the expense.\n    setExpenses((prevExpenses)=>{\n      // here we are adding the new expense to previous expenses and returning the new array.\n      return [expense,...prevExpenses];\n    });\n  };\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}></NewExpense>\n      <Expenses items={expenses}></Expenses>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}