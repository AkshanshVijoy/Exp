{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\react\\\\exp\\\\src\\\\components\\\\Chart\\\\Chart.js\";\nimport React from \"react\";\nimport \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = props => {\n  //map will return an array of value(number) to dataPointValues \n  const dataPointValues = /*#__PURE__*/_jsxDEV(\"props\", {\n    className: \"dataPoints\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 27\n  }, this).map(dataPoint => dataPoint.value); //spread operator pull out all the array elements and add them as standalone arguments to this max method\n\n\n  const totalMaximum = Math.max(...dataPointValues);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: props.dataPoints.map(dataPoint => /*#__PURE__*/_jsxDEV(ChartBar, {\n      value: dataPoint.value,\n      maxValue: totalMaximum,\n      label: dataPoint.label\n    }, dataPoint.label, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","ChartBar","Chart","props","dataPointValues","map","dataPoint","value","totalMaximum","Math","max","dataPoints","label"],"sources":["D:/projects/react/exp/src/components/Chart/Chart.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\nconst Chart = (props) => {\r\n\r\n    //map will return an array of value(number) to dataPointValues \r\n    const dataPointValues=<props className=\"dataPoints\"></props>.map(dataPoint=>dataPoint.value)\r\n\r\n    //spread operator pull out all the array elements and add them as standalone arguments to this max method\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n  return (\r\n    <div className=\"chart\">\r\n\r\n    {/* when chart is used by some component it sends datapoints as props that would be an array having value and should be plotted using ChartBar */}\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label} \r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Chart;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AACA,MAAMC,KAAK,GAAIC,KAAD,IAAW;EAErB;EACA,MAAMC,eAAe,GAAC;IAAO,SAAS,EAAC;EAAjB;IAAA;IAAA;IAAA;EAAA,SAAuCC,GAAvC,CAA2CC,SAAS,IAAEA,SAAS,CAACC,KAAhE,CAAtB,CAHqB,CAKrB;;;EACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,GAAL,CAAS,GAAGN,eAAZ,CAArB;EACF,oBACE;IAAK,SAAS,EAAC,OAAf;IAAA,UAGGD,KAAK,CAACQ,UAAN,CAAiBN,GAAjB,CAAsBC,SAAD,iBACpB,QAAC,QAAD;MAEE,KAAK,EAAEA,SAAS,CAACC,KAFnB;MAGE,QAAQ,EAAEC,YAHZ;MAIE,KAAK,EAAEF,SAAS,CAACM;IAJnB,GACON,SAAS,CAACM,KADjB;MAAA;MAAA;MAAA;IAAA,QADD;EAHH;IAAA;IAAA;IAAA;EAAA,QADF;AAcD,CArBD;;KAAMV,K;AAsBN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}