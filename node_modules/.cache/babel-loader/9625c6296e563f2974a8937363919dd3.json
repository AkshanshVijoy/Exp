{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\react\\\\exp\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const DUMMY_EXPENSES = [{\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2022, 1, 14)\n  }, {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    date: new Date(2022, 2, 17)\n  }, {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2022, 7, 28)\n  }, {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2022, 8, 12)\n  }]; // function to be passed as props to the NewExpense to collect it's data as parameter and use it here\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense => {\n    // SPECIAL FUNCTION FORM for state updating function is used so that previous data is not lost. Here we are passing a function as an argument to the state updating function(setExpenses). React will automatically send a previous snapshot of the expense.\n    setExpenses(prevExpenses => {\n      // here we are adding the new expense to previous expenses and returning the new array\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NewExpense, {\n      onAddExpense: addExpenseHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Expenses, {\n      items: expenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"u7IRQpQMt51/DJVypWOPP2UCGYA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Expenses","NewExpense","App","DUMMY_EXPENSES","id","title","amount","date","Date","expenses","setExpenses","addExpenseHandler","expense","prevExpenses"],"sources":["D:/projects/react/exp/src/App.js"],"sourcesContent":["import React,{useState} from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nconst App = () => {\n  const DUMMY_EXPENSES = [\n    {\n      id: \"e1\",\n      title: \"Toilet Paper\",\n      amount: 94.12,\n      date: new Date(2022, 1, 14),\n    },\n    {\n      id: \"e2\",\n      title: \"New TV\",\n      amount: 799.49,\n      date: new Date(2022, 2, 17),\n    },\n    {\n      id: \"e3\",\n      title: \"Car Insurance\",\n      amount: 294.67,\n      date: new Date(2022, 7, 28),\n    },\n    {\n      id: \"e4\",\n      title: \"New Desk (Wooden)\",\n      amount: 450,\n      date: new Date(2022, 8, 12),\n    },\n  ];\n\n  // function to be passed as props to the NewExpense to collect it's data as parameter and use it here\n  const [expenses,setExpenses]=useState(DUMMY_EXPENSES);\n  const addExpenseHandler = (expense) => {\n    // SPECIAL FUNCTION FORM for state updating function is used so that previous data is not lost. Here we are passing a function as an argument to the state updating function(setExpenses). React will automatically send a previous snapshot of the expense.\n    setExpenses(prevExpenses=>{\n      // here we are adding the new expense to previous expenses and returning the new array\n      return [expense,...prevExpenses];\n    });\n  };\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}></NewExpense>\n      <Expenses items={expenses}></Expenses>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;;;AACA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAMC,cAAc,GAAG,CACrB;IACEC,EAAE,EAAE,IADN;IAEEC,KAAK,EAAE,cAFT;IAGEC,MAAM,EAAE,KAHV;IAIEC,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;EAJR,CADqB,EAOrB;IACEJ,EAAE,EAAE,IADN;IAEEC,KAAK,EAAE,QAFT;IAGEC,MAAM,EAAE,MAHV;IAIEC,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;EAJR,CAPqB,EAarB;IACEJ,EAAE,EAAE,IADN;IAEEC,KAAK,EAAE,eAFT;IAGEC,MAAM,EAAE,MAHV;IAIEC,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;EAJR,CAbqB,EAmBrB;IACEJ,EAAE,EAAE,IADN;IAEEC,KAAK,EAAE,mBAFT;IAGEC,MAAM,EAAE,GAHV;IAIEC,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB;EAJR,CAnBqB,CAAvB,CADgB,CA4BhB;;EACA,MAAM,CAACC,QAAD,EAAUC,WAAV,IAAuBX,QAAQ,CAACI,cAAD,CAArC;;EACA,MAAMQ,iBAAiB,GAAIC,OAAD,IAAa;IACrC;IACAF,WAAW,CAACG,YAAY,IAAE;MACxB;MACA,OAAO,CAACD,OAAD,EAAS,GAAGC,YAAZ,CAAP;IACD,CAHU,CAAX;EAID,CAND;;EAOA,oBACE;IAAA,wBACE,QAAC,UAAD;MAAY,YAAY,EAAEF;IAA1B;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,QAAD;MAAU,KAAK,EAAEF;IAAjB;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD,CA3CD;;GAAMP,G;;KAAAA,G;AA6CN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}